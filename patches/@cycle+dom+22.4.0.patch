diff --git a/node_modules/@cycle/dom/lib/cjs/VNodeWrapper.js b/node_modules/@cycle/dom/lib/cjs/VNodeWrapper.js
index fb91f43..9703811 100644
--- a/node_modules/@cycle/dom/lib/cjs/VNodeWrapper.js
+++ b/node_modules/@cycle/dom/lib/cjs/VNodeWrapper.js
@@ -1,48 +1,74 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-var vnode_1 = require("snabbdom/vnode");
-var h_1 = require("snabbdom/h");
-var snabbdom_selector_1 = require("snabbdom-selector");
-var utils_1 = require("./utils");
-var VNodeWrapper = /** @class */ (function () {
-    function VNodeWrapper(rootElement) {
-        this.rootElement = rootElement;
+'use strict'
+Object.defineProperty(exports, '__esModule', { value: true })
+var vnode_1 = require('snabbdom/vnode')
+var h_1 = require('snabbdom/h')
+var snabbdom_selector_1 = require('snabbdom-selector')
+var utils_1 = require('./utils')
+var VNodeWrapper = /** @class */ (function() {
+  function VNodeWrapper(rootElement) {
+    this.rootElement = rootElement
+  }
+  VNodeWrapper.prototype.call = function(vnode) {
+    if (utils_1.isDocFrag(this.rootElement)) {
+      if (vnode && vnode.sel === 'root') {
+        return this.wrapDocFrag(vnode.children)
+      } else {
+        return this.wrapDocFrag(vnode === null ? [] : [vnode])
+      }
     }
-    VNodeWrapper.prototype.call = function (vnode) {
-        if (utils_1.isDocFrag(this.rootElement)) {
-            return this.wrapDocFrag(vnode === null ? [] : [vnode]);
-        }
-        if (vnode === null) {
-            return this.wrap([]);
-        }
-        var _a = snabbdom_selector_1.selectorParser(vnode), selTagName = _a.tagName, selId = _a.id;
-        var vNodeClassName = snabbdom_selector_1.classNameFromVNode(vnode);
-        var vNodeData = vnode.data || {};
-        var vNodeDataProps = vNodeData.props || {};
-        var _b = vNodeDataProps.id, vNodeId = _b === void 0 ? selId : _b;
-        var isVNodeAndRootElementIdentical = typeof vNodeId === 'string' &&
-            vNodeId.toUpperCase() === this.rootElement.id.toUpperCase() &&
-            selTagName.toUpperCase() === this.rootElement.tagName.toUpperCase() &&
-            vNodeClassName.toUpperCase() === this.rootElement.className.toUpperCase();
-        if (isVNodeAndRootElementIdentical) {
-            return vnode;
-        }
-        return this.wrap([vnode]);
-    };
-    VNodeWrapper.prototype.wrapDocFrag = function (children) {
-        return vnode_1.vnode('', { isolate: [] }, children, undefined, this
-            .rootElement);
-    };
-    VNodeWrapper.prototype.wrap = function (children) {
-        var _a = this.rootElement, tagName = _a.tagName, id = _a.id, className = _a.className;
-        var selId = id ? "#" + id : '';
-        var selClass = className ? "." + className.split(" ").join(".") : '';
-        var vnode = h_1.h("" + tagName.toLowerCase() + selId + selClass, {}, children);
-        vnode.data = vnode.data || {};
-        vnode.data.isolate = vnode.data.isolate || [];
-        return vnode;
-    };
-    return VNodeWrapper;
-}());
-exports.VNodeWrapper = VNodeWrapper;
+    if (vnode === null) {
+      return this.wrap([])
+    }
+    var _a = snabbdom_selector_1.selectorParser(vnode),
+      selTagName = _a.tagName,
+      selId = _a.id
+    var vNodeClassName = snabbdom_selector_1.classNameFromVNode(vnode)
+    var vNodeData = vnode.data || {}
+    var vNodeDataProps = vNodeData.props || {}
+    var _b = vNodeDataProps.id,
+      vNodeId = _b === void 0 ? selId : _b
+
+    var isVNodeAndRootElementIdentical =
+      selTagName === 'root' ||
+      (typeof vNodeId === 'string' &&
+        vNodeId.toUpperCase() === this.rootElement.id.toUpperCase() &&
+        selTagName.toUpperCase() === this.rootElement.tagName.toUpperCase() &&
+        vNodeClassName.toUpperCase() ===
+          this.rootElement.className.toUpperCase())
+    if (isVNodeAndRootElementIdentical) {
+      vnode.sel = this.rootElement.tagName.toLowerCase()
+      vnode.data.isolate = vnode.data.isolate || []
+
+      return vnode
+    }
+    return this.wrap([vnode])
+  }
+  VNodeWrapper.prototype.wrapDocFrag = function(children) {
+    return vnode_1.vnode(
+      '',
+      { isolate: [] },
+      children,
+      undefined,
+      this.rootElement,
+    )
+  }
+  VNodeWrapper.prototype.wrap = function(children) {
+    var _a = this.rootElement,
+      tagName = _a.tagName,
+      id = _a.id,
+      className = _a.className
+    var selId = id ? '#' + id : ''
+    var selClass = className ? '.' + className.split(' ').join('.') : ''
+    var vnode = h_1.h(
+      '' + tagName.toLowerCase() + selId + selClass,
+      {},
+      children,
+    )
+    vnode.data = vnode.data || {}
+    vnode.data.isolate = vnode.data.isolate || []
+    return vnode
+  }
+  return VNodeWrapper
+})()
+exports.VNodeWrapper = VNodeWrapper
 //# sourceMappingURL=VNodeWrapper.js.map
\ No newline at end of file
diff --git a/node_modules/@cycle/dom/lib/cjs/hyperscript-helpers.js b/node_modules/@cycle/dom/lib/cjs/hyperscript-helpers.js
index bc40abc..7ceac18 100644
--- a/node_modules/@cycle/dom/lib/cjs/hyperscript-helpers.js
+++ b/node_modules/@cycle/dom/lib/cjs/hyperscript-helpers.js
@@ -1,242 +1,237 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
+'use strict'
+Object.defineProperty(exports, '__esModule', { value: true })
 // tslint:disable:max-file-line-count
-var h_1 = require("snabbdom/h");
+var h_1 = require('snabbdom/h')
 function isValidString(param) {
-    return typeof param === 'string' && param.length > 0;
+  return typeof param === 'string' && param.length > 0
 }
 function isSelector(param) {
-    return isValidString(param) && (param[0] === '.' || param[0] === '#');
+  return isValidString(param) && (param[0] === '.' || param[0] === '#')
 }
 function createTagFunction(tagName) {
-    return function hyperscript(a, b, c) {
-        var hasA = typeof a !== 'undefined';
-        var hasB = typeof b !== 'undefined';
-        var hasC = typeof c !== 'undefined';
-        if (isSelector(a)) {
-            if (hasB && hasC) {
-                return h_1.h(tagName + a, b, c);
-            }
-            else if (hasB) {
-                return h_1.h(tagName + a, b);
-            }
-            else {
-                return h_1.h(tagName + a, {});
-            }
-        }
-        else if (hasC) {
-            return h_1.h(tagName + a, b, c);
-        }
-        else if (hasB) {
-            return h_1.h(tagName, a, b);
-        }
-        else if (hasA) {
-            return h_1.h(tagName, a);
-        }
-        else {
-            return h_1.h(tagName, {});
-        }
-    };
+  return function hyperscript(a, b, c) {
+    var hasA = typeof a !== 'undefined'
+    var hasB = typeof b !== 'undefined'
+    var hasC = typeof c !== 'undefined'
+    if (isSelector(a)) {
+      if (hasB && hasC) {
+        return h_1.h(tagName + a, b, c)
+      } else if (hasB) {
+        return h_1.h(tagName + a, b)
+      } else {
+        return h_1.h(tagName + a, {})
+      }
+    } else if (hasC) {
+      return h_1.h(tagName + a, b, c)
+    } else if (hasB) {
+      return h_1.h(tagName, a, b)
+    } else if (hasA) {
+      return h_1.h(tagName, a)
+    } else {
+      return h_1.h(tagName, {})
+    }
+  }
 }
 var SVG_TAG_NAMES = [
-    'a',
-    'altGlyph',
-    'altGlyphDef',
-    'altGlyphItem',
-    'animate',
-    'animateColor',
-    'animateMotion',
-    'animateTransform',
-    'circle',
-    'clipPath',
-    'colorProfile',
-    'cursor',
-    'defs',
-    'desc',
-    'ellipse',
-    'feBlend',
-    'feColorMatrix',
-    'feComponentTransfer',
-    'feComposite',
-    'feConvolveMatrix',
-    'feDiffuseLighting',
-    'feDisplacementMap',
-    'feDistantLight',
-    'feFlood',
-    'feFuncA',
-    'feFuncB',
-    'feFuncG',
-    'feFuncR',
-    'feGaussianBlur',
-    'feImage',
-    'feMerge',
-    'feMergeNode',
-    'feMorphology',
-    'feOffset',
-    'fePointLight',
-    'feSpecularLighting',
-    'feSpotlight',
-    'feTile',
-    'feTurbulence',
-    'filter',
-    'font',
-    'fontFace',
-    'fontFaceFormat',
-    'fontFaceName',
-    'fontFaceSrc',
-    'fontFaceUri',
-    'foreignObject',
-    'g',
-    'glyph',
-    'glyphRef',
-    'hkern',
-    'image',
-    'line',
-    'linearGradient',
-    'marker',
-    'mask',
-    'metadata',
-    'missingGlyph',
-    'mpath',
-    'path',
-    'pattern',
-    'polygon',
-    'polyline',
-    'radialGradient',
-    'rect',
-    'script',
-    'set',
-    'stop',
-    'style',
-    'switch',
-    'symbol',
-    'text',
-    'textPath',
-    'title',
-    'tref',
-    'tspan',
-    'use',
-    'view',
-    'vkern',
-];
-var svg = createTagFunction('svg');
-SVG_TAG_NAMES.forEach(function (tag) {
-    svg[tag] = createTagFunction(tag);
-});
+  'a',
+  'altGlyph',
+  'altGlyphDef',
+  'altGlyphItem',
+  'animate',
+  'animateColor',
+  'animateMotion',
+  'animateTransform',
+  'circle',
+  'clipPath',
+  'colorProfile',
+  'cursor',
+  'defs',
+  'desc',
+  'ellipse',
+  'feBlend',
+  'feColorMatrix',
+  'feComponentTransfer',
+  'feComposite',
+  'feConvolveMatrix',
+  'feDiffuseLighting',
+  'feDisplacementMap',
+  'feDistantLight',
+  'feFlood',
+  'feFuncA',
+  'feFuncB',
+  'feFuncG',
+  'feFuncR',
+  'feGaussianBlur',
+  'feImage',
+  'feMerge',
+  'feMergeNode',
+  'feMorphology',
+  'feOffset',
+  'fePointLight',
+  'feSpecularLighting',
+  'feSpotlight',
+  'feTile',
+  'feTurbulence',
+  'filter',
+  'font',
+  'fontFace',
+  'fontFaceFormat',
+  'fontFaceName',
+  'fontFaceSrc',
+  'fontFaceUri',
+  'foreignObject',
+  'g',
+  'glyph',
+  'glyphRef',
+  'hkern',
+  'image',
+  'line',
+  'linearGradient',
+  'marker',
+  'mask',
+  'metadata',
+  'missingGlyph',
+  'mpath',
+  'path',
+  'pattern',
+  'polygon',
+  'polyline',
+  'radialGradient',
+  'rect',
+  'script',
+  'set',
+  'stop',
+  'style',
+  'switch',
+  'symbol',
+  'text',
+  'textPath',
+  'title',
+  'tref',
+  'tspan',
+  'use',
+  'view',
+  'vkern',
+]
+var svg = createTagFunction('svg')
+SVG_TAG_NAMES.forEach(function(tag) {
+  svg[tag] = createTagFunction(tag)
+})
 var TAG_NAMES = [
-    'a',
-    'abbr',
-    'address',
-    'area',
-    'article',
-    'aside',
-    'audio',
-    'b',
-    'base',
-    'bdi',
-    'bdo',
-    'blockquote',
-    'body',
-    'br',
-    'button',
-    'canvas',
-    'caption',
-    'cite',
-    'code',
-    'col',
-    'colgroup',
-    'dd',
-    'del',
-    'details',
-    'dfn',
-    'dir',
-    'div',
-    'dl',
-    'dt',
-    'em',
-    'embed',
-    'fieldset',
-    'figcaption',
-    'figure',
-    'footer',
-    'form',
-    'h1',
-    'h2',
-    'h3',
-    'h4',
-    'h5',
-    'h6',
-    'head',
-    'header',
-    'hgroup',
-    'hr',
-    'html',
-    'i',
-    'iframe',
-    'img',
-    'input',
-    'ins',
-    'kbd',
-    'keygen',
-    'label',
-    'legend',
-    'li',
-    'link',
-    'main',
-    'map',
-    'mark',
-    'menu',
-    'meta',
-    'nav',
-    'noscript',
-    'object',
-    'ol',
-    'optgroup',
-    'option',
-    'p',
-    'param',
-    'pre',
-    'progress',
-    'q',
-    'rp',
-    'rt',
-    'ruby',
-    's',
-    'samp',
-    'script',
-    'section',
-    'select',
-    'small',
-    'source',
-    'span',
-    'strong',
-    'style',
-    'sub',
-    'summary',
-    'sup',
-    'table',
-    'tbody',
-    'td',
-    'textarea',
-    'tfoot',
-    'th',
-    'thead',
-    'time',
-    'title',
-    'tr',
-    'u',
-    'ul',
-    'video',
-];
+  'a',
+  'abbr',
+  'address',
+  'area',
+  'article',
+  'aside',
+  'audio',
+  'b',
+  'base',
+  'bdi',
+  'bdo',
+  'blockquote',
+  'body',
+  'br',
+  'button',
+  'canvas',
+  'caption',
+  'cite',
+  'code',
+  'col',
+  'colgroup',
+  'dd',
+  'del',
+  'details',
+  'dfn',
+  'dir',
+  'div',
+  'dl',
+  'dt',
+  'em',
+  'embed',
+  'fieldset',
+  'figcaption',
+  'figure',
+  'footer',
+  'form',
+  'h1',
+  'h2',
+  'h3',
+  'h4',
+  'h5',
+  'h6',
+  'head',
+  'header',
+  'hgroup',
+  'hr',
+  'html',
+  'i',
+  'iframe',
+  'img',
+  'input',
+  'ins',
+  'kbd',
+  'keygen',
+  'label',
+  'legend',
+  'li',
+  'link',
+  'main',
+  'map',
+  'mark',
+  'menu',
+  'meta',
+  'nav',
+  'noscript',
+  'object',
+  'ol',
+  'optgroup',
+  'option',
+  'p',
+  'param',
+  'pre',
+  'progress',
+  'q',
+  'rp',
+  'rt',
+  'root',
+  'ruby',
+  's',
+  'samp',
+  'script',
+  'section',
+  'select',
+  'small',
+  'source',
+  'span',
+  'strong',
+  'style',
+  'sub',
+  'summary',
+  'sup',
+  'table',
+  'tbody',
+  'td',
+  'textarea',
+  'tfoot',
+  'th',
+  'thead',
+  'time',
+  'title',
+  'tr',
+  'u',
+  'ul',
+  'video',
+]
 var exported = {
-    SVG_TAG_NAMES: SVG_TAG_NAMES,
-    TAG_NAMES: TAG_NAMES,
-    svg: svg,
-    isSelector: isSelector,
-    createTagFunction: createTagFunction,
-};
-TAG_NAMES.forEach(function (n) {
-    exported[n] = createTagFunction(n);
-});
-exports.default = exported;
+  SVG_TAG_NAMES: SVG_TAG_NAMES,
+  TAG_NAMES: TAG_NAMES,
+  svg: svg,
+  isSelector: isSelector,
+  createTagFunction: createTagFunction,
+}
+TAG_NAMES.forEach(function(n) {
+  exported[n] = createTagFunction(n)
+})
+exports.default = exported
 //# sourceMappingURL=hyperscript-helpers.js.map
\ No newline at end of file
diff --git a/node_modules/@cycle/dom/src/VNodeWrapper.ts b/node_modules/@cycle/dom/src/VNodeWrapper.ts
index c1c8ae4..89e0b55 100644
--- a/node_modules/@cycle/dom/src/VNodeWrapper.ts
+++ b/node_modules/@cycle/dom/src/VNodeWrapper.ts
@@ -1,53 +1,58 @@
-import {VNode, vnode as vnodeFn} from 'snabbdom/vnode';
-import {h} from 'snabbdom/h';
-import {classNameFromVNode, selectorParser} from 'snabbdom-selector';
-import {isDocFrag} from './utils';
+import { classNameFromVNode, selectorParser } from 'snabbdom-selector'
+import { h } from 'snabbdom/h'
+import { VNode, vnode as vnodeFn } from 'snabbdom/vnode'
+import { isDocFrag } from './utils'
 
 export class VNodeWrapper {
   constructor(public rootElement: Element | DocumentFragment) {}
 
   public call(vnode: VNode | null): VNode {
     if (isDocFrag(this.rootElement)) {
-      return this.wrapDocFrag(vnode === null ? [] : [vnode]);
+      if (vnode && vnode.sel === 'root') {
+        return this.wrapDocFrag(vnode.children)
+      } else {
+        return this.wrapDocFrag(vnode === null ? [] : [vnode])
+      }
     }
     if (vnode === null) {
-      return this.wrap([]);
+      return this.wrap([])
     }
-    const {tagName: selTagName, id: selId} = selectorParser(vnode);
-    const vNodeClassName = classNameFromVNode(vnode);
-    const vNodeData = vnode.data || {};
-    const vNodeDataProps = vNodeData.props || {};
-    const {id: vNodeId = selId} = vNodeDataProps;
+    const { tagName: selTagName, id: selId } = selectorParser(vnode)
+    const vNodeClassName = classNameFromVNode(vnode)
+    const vNodeData = vnode.data || {}
+    const vNodeDataProps = vNodeData.props || {}
+    const { id: vNodeId = selId } = vNodeDataProps
 
     const isVNodeAndRootElementIdentical =
-      typeof vNodeId === 'string' &&
-      vNodeId.toUpperCase() === this.rootElement.id.toUpperCase() &&
-      selTagName.toUpperCase() === this.rootElement.tagName.toUpperCase() &&
-      vNodeClassName.toUpperCase() === this.rootElement.className.toUpperCase();
+      selTagName === 'root' ||
+      (typeof vNodeId === 'string' &&
+        vNodeId.toUpperCase() === this.rootElement.id.toUpperCase() &&
+        selTagName.toUpperCase() === this.rootElement.tagName.toUpperCase() &&
+        vNodeClassName.toUpperCase() ===
+          this.rootElement.className.toUpperCase())
 
     if (isVNodeAndRootElementIdentical) {
-      return vnode;
+      vnode.sel = this.rootElement.tagName.toLowerCase()
+      vnode.data.isolate = vnode.data.isolate || []
+
+      return vnode
     }
 
-    return this.wrap([vnode]);
+    return this.wrap([vnode])
   }
 
-  private wrapDocFrag(children: Array<VNode>) {
-    return vnodeFn('', {isolate: []}, children, undefined, this
-      .rootElement as any);
+  private wrapDocFrag(children: Array<string | VNode>) {
+    return vnodeFn('', { isolate: [] }, children, undefined, this
+      .rootElement as any)
   }
 
-  private wrap(children: Array<VNode>) {
-    const {tagName, id, className} = this.rootElement as Element;
-    const selId = id ? `#${id}` : '';
-    const selClass = className ? `.${className.split(` `).join(`.`)}` : '';
-    const vnode = h(
-      `${tagName.toLowerCase()}${selId}${selClass}`,
-      {},
-      children
-    );
-    vnode.data = vnode.data || {};
-    vnode.data.isolate = vnode.data.isolate || [];
-    return vnode;
+  private wrap(children: VNode[]) {
+    const { tagName, id, className } = this.rootElement as Element
+    const selId = id ? `#${id}` : ''
+    const selClass = className ? `.${className.split(` `).join(`.`)}` : ''
+    const vnode = h(`${tagName.toLowerCase()}${selId}${selClass}`, {}, children)
+    vnode.data = vnode.data || {}
+    vnode.data.isolate = vnode.data.isolate || []
+    return vnode
   }
 }
diff --git a/node_modules/@cycle/dom/src/hyperscript-helpers.ts b/node_modules/@cycle/dom/src/hyperscript-helpers.ts
index bbcde5a..b448269 100644
--- a/node_modules/@cycle/dom/src/hyperscript-helpers.ts
+++ b/node_modules/@cycle/dom/src/hyperscript-helpers.ts
@@ -1,38 +1,38 @@
 // tslint:disable:max-file-line-count
-import {h} from 'snabbdom/h';
-import {VNode, VNodeData} from 'snabbdom/vnode';
+import { h } from 'snabbdom/h'
+import { VNode, VNodeData } from 'snabbdom/vnode'
 
 function isValidString(param: any): boolean {
-  return typeof param === 'string' && param.length > 0;
+  return typeof param === 'string' && param.length > 0
 }
 
 function isSelector(param: any): boolean {
-  return isValidString(param) && (param[0] === '.' || param[0] === '#');
+  return isValidString(param) && (param[0] === '.' || param[0] === '#')
 }
 
 function createTagFunction(tagName: string): Function {
   return function hyperscript(a: any, b?: any, c?: any): VNode {
-    const hasA = typeof a !== 'undefined';
-    const hasB = typeof b !== 'undefined';
-    const hasC = typeof c !== 'undefined';
+    const hasA = typeof a !== 'undefined'
+    const hasB = typeof b !== 'undefined'
+    const hasC = typeof c !== 'undefined'
     if (isSelector(a)) {
       if (hasB && hasC) {
-        return h(tagName + a, b, c);
+        return h(tagName + a, b, c)
       } else if (hasB) {
-        return h(tagName + a, b);
+        return h(tagName + a, b)
       } else {
-        return h(tagName + a, {});
+        return h(tagName + a, {})
       }
     } else if (hasC) {
-      return h(tagName + a, b, c);
+      return h(tagName + a, b, c)
     } else if (hasB) {
-      return h(tagName, a, b);
+      return h(tagName, a, b)
     } else if (hasA) {
-      return h(tagName, a);
+      return h(tagName, a)
     } else {
-      return h(tagName, {});
+      return h(tagName, {})
     }
-  };
+  }
 }
 
 const SVG_TAG_NAMES = [
@@ -115,13 +115,13 @@ const SVG_TAG_NAMES = [
   'use',
   'view',
   'vkern',
-];
+]
 
-const svg = createTagFunction('svg');
+const svg = createTagFunction('svg')
 
 SVG_TAG_NAMES.forEach(tag => {
-  svg[tag] = createTagFunction(tag);
-});
+  svg[tag] = createTagFunction(tag)
+})
 
 const TAG_NAMES = [
   'a',
@@ -198,6 +198,7 @@ const TAG_NAMES = [
   'pre',
   'progress',
   'q',
+  'root',
   'rp',
   'rt',
   'ruby',
@@ -227,7 +228,7 @@ const TAG_NAMES = [
   'u',
   'ul',
   'video',
-];
+]
 
 const exported = {
   SVG_TAG_NAMES,
@@ -235,213 +236,214 @@ const exported = {
   svg,
   isSelector,
   createTagFunction,
-};
+}
 TAG_NAMES.forEach(n => {
-  exported[n] = createTagFunction(n);
-});
-export default (exported as any) as HyperScriptHelpers;
+  exported[n] = createTagFunction(n)
+})
+export default (exported as any) as HyperScriptHelpers
 
-export type Children = Array<VNode | string | null>;
-export type Properties = any; //VNodeData // does not work yet, because of https://github.com/snabbdom/snabbdom/pull/325
+export type Children = Array<VNode | string | null>
+export type Properties = any // VNodeData // does not work yet, because of https://github.com/snabbdom/snabbdom/pull/325
 export interface HyperScriptHelperFn {
-  (): VNode;
-  (textOrSelector: string): VNode;
-  (children: Children): VNode;
-  (properties: Properties): VNode;
-  (selector: string, children: Children): VNode;
-  (selector: string, text: string): VNode;
-  (selector: string, properties: Properties): VNode;
-  (properties: Properties, children: Children): VNode;
-  (properties: Properties, text: string): VNode;
-  (selector: string, properties: Properties, text: string): VNode;
-  (selector: string, properties: Properties, children: Children): VNode;
+  (): VNode
+  (textOrSelector: string): VNode
+  (children: Children): VNode
+  (properties: Properties): VNode
+  (selector: string, children: Children): VNode
+  (selector: string, text: string): VNode
+  (selector: string, properties: Properties): VNode
+  (properties: Properties, children: Children): VNode
+  (properties: Properties, text: string): VNode
+  (selector: string, properties: Properties, text: string): VNode
+  (selector: string, properties: Properties, children: Children): VNode
 }
 
 export interface SVGHelperFn extends HyperScriptHelperFn {
-  a: HyperScriptHelperFn;
-  altGlyph: HyperScriptHelperFn;
-  altGlyphDef: HyperScriptHelperFn;
-  altGlyphItem: HyperScriptHelperFn;
-  animate: HyperScriptHelperFn;
-  animateColor: HyperScriptHelperFn;
-  animateMotion: HyperScriptHelperFn;
-  animateTransform: HyperScriptHelperFn;
-  circle: HyperScriptHelperFn;
-  clipPath: HyperScriptHelperFn;
-  colorProfile: HyperScriptHelperFn;
-  cursor: HyperScriptHelperFn;
-  defs: HyperScriptHelperFn;
-  desc: HyperScriptHelperFn;
-  ellipse: HyperScriptHelperFn;
-  feBlend: HyperScriptHelperFn;
-  feColorMatrix: HyperScriptHelperFn;
-  feComponentTransfer: HyperScriptHelperFn;
-  feComposite: HyperScriptHelperFn;
-  feConvolveMatrix: HyperScriptHelperFn;
-  feDiffuseLighting: HyperScriptHelperFn;
-  feDisplacementMap: HyperScriptHelperFn;
-  feDistantLight: HyperScriptHelperFn;
-  feFlood: HyperScriptHelperFn;
-  feFuncA: HyperScriptHelperFn;
-  feFuncB: HyperScriptHelperFn;
-  feFuncG: HyperScriptHelperFn;
-  feFuncR: HyperScriptHelperFn;
-  feGaussianBlur: HyperScriptHelperFn;
-  feImage: HyperScriptHelperFn;
-  feMerge: HyperScriptHelperFn;
-  feMergeNode: HyperScriptHelperFn;
-  feMorphology: HyperScriptHelperFn;
-  feOffset: HyperScriptHelperFn;
-  fePointLight: HyperScriptHelperFn;
-  feSpecularLighting: HyperScriptHelperFn;
-  feSpotlight: HyperScriptHelperFn;
-  feTile: HyperScriptHelperFn;
-  feTurbulence: HyperScriptHelperFn;
-  filter: HyperScriptHelperFn;
-  font: HyperScriptHelperFn;
-  fontFace: HyperScriptHelperFn;
-  fontFaceFormat: HyperScriptHelperFn;
-  fontFaceName: HyperScriptHelperFn;
-  fontFaceSrc: HyperScriptHelperFn;
-  fontFaceUri: HyperScriptHelperFn;
-  foreignObject: HyperScriptHelperFn;
-  g: HyperScriptHelperFn;
-  glyph: HyperScriptHelperFn;
-  glyphRef: HyperScriptHelperFn;
-  hkern: HyperScriptHelperFn;
-  image: HyperScriptHelperFn;
-  line: HyperScriptHelperFn;
-  linearGradient: HyperScriptHelperFn;
-  marker: HyperScriptHelperFn;
-  mask: HyperScriptHelperFn;
-  metadata: HyperScriptHelperFn;
-  missingGlyph: HyperScriptHelperFn;
-  mpath: HyperScriptHelperFn;
-  path: HyperScriptHelperFn;
-  pattern: HyperScriptHelperFn;
-  polygon: HyperScriptHelperFn;
-  polyline: HyperScriptHelperFn;
-  radialGradient: HyperScriptHelperFn;
-  rect: HyperScriptHelperFn;
-  script: HyperScriptHelperFn;
-  set: HyperScriptHelperFn;
-  stop: HyperScriptHelperFn;
-  style: HyperScriptHelperFn;
-  switch: HyperScriptHelperFn;
-  symbol: HyperScriptHelperFn;
-  text: HyperScriptHelperFn;
-  textPath: HyperScriptHelperFn;
-  title: HyperScriptHelperFn;
-  tref: HyperScriptHelperFn;
-  tspan: HyperScriptHelperFn;
-  use: HyperScriptHelperFn;
-  view: HyperScriptHelperFn;
-  vkern: HyperScriptHelperFn;
+  a: HyperScriptHelperFn
+  altGlyph: HyperScriptHelperFn
+  altGlyphDef: HyperScriptHelperFn
+  altGlyphItem: HyperScriptHelperFn
+  animate: HyperScriptHelperFn
+  animateColor: HyperScriptHelperFn
+  animateMotion: HyperScriptHelperFn
+  animateTransform: HyperScriptHelperFn
+  circle: HyperScriptHelperFn
+  clipPath: HyperScriptHelperFn
+  colorProfile: HyperScriptHelperFn
+  cursor: HyperScriptHelperFn
+  defs: HyperScriptHelperFn
+  desc: HyperScriptHelperFn
+  ellipse: HyperScriptHelperFn
+  feBlend: HyperScriptHelperFn
+  feColorMatrix: HyperScriptHelperFn
+  feComponentTransfer: HyperScriptHelperFn
+  feComposite: HyperScriptHelperFn
+  feConvolveMatrix: HyperScriptHelperFn
+  feDiffuseLighting: HyperScriptHelperFn
+  feDisplacementMap: HyperScriptHelperFn
+  feDistantLight: HyperScriptHelperFn
+  feFlood: HyperScriptHelperFn
+  feFuncA: HyperScriptHelperFn
+  feFuncB: HyperScriptHelperFn
+  feFuncG: HyperScriptHelperFn
+  feFuncR: HyperScriptHelperFn
+  feGaussianBlur: HyperScriptHelperFn
+  feImage: HyperScriptHelperFn
+  feMerge: HyperScriptHelperFn
+  feMergeNode: HyperScriptHelperFn
+  feMorphology: HyperScriptHelperFn
+  feOffset: HyperScriptHelperFn
+  fePointLight: HyperScriptHelperFn
+  feSpecularLighting: HyperScriptHelperFn
+  feSpotlight: HyperScriptHelperFn
+  feTile: HyperScriptHelperFn
+  feTurbulence: HyperScriptHelperFn
+  filter: HyperScriptHelperFn
+  font: HyperScriptHelperFn
+  fontFace: HyperScriptHelperFn
+  fontFaceFormat: HyperScriptHelperFn
+  fontFaceName: HyperScriptHelperFn
+  fontFaceSrc: HyperScriptHelperFn
+  fontFaceUri: HyperScriptHelperFn
+  foreignObject: HyperScriptHelperFn
+  g: HyperScriptHelperFn
+  glyph: HyperScriptHelperFn
+  glyphRef: HyperScriptHelperFn
+  hkern: HyperScriptHelperFn
+  image: HyperScriptHelperFn
+  line: HyperScriptHelperFn
+  linearGradient: HyperScriptHelperFn
+  marker: HyperScriptHelperFn
+  mask: HyperScriptHelperFn
+  metadata: HyperScriptHelperFn
+  missingGlyph: HyperScriptHelperFn
+  mpath: HyperScriptHelperFn
+  path: HyperScriptHelperFn
+  pattern: HyperScriptHelperFn
+  polygon: HyperScriptHelperFn
+  polyline: HyperScriptHelperFn
+  radialGradient: HyperScriptHelperFn
+  rect: HyperScriptHelperFn
+  script: HyperScriptHelperFn
+  set: HyperScriptHelperFn
+  stop: HyperScriptHelperFn
+  style: HyperScriptHelperFn
+  switch: HyperScriptHelperFn
+  symbol: HyperScriptHelperFn
+  text: HyperScriptHelperFn
+  textPath: HyperScriptHelperFn
+  title: HyperScriptHelperFn
+  tref: HyperScriptHelperFn
+  tspan: HyperScriptHelperFn
+  use: HyperScriptHelperFn
+  view: HyperScriptHelperFn
+  vkern: HyperScriptHelperFn
 }
 
 export interface HyperScriptHelpers {
-  svg: SVGHelperFn;
-  a: HyperScriptHelperFn;
-  abbr: HyperScriptHelperFn;
-  address: HyperScriptHelperFn;
-  area: HyperScriptHelperFn;
-  article: HyperScriptHelperFn;
-  aside: HyperScriptHelperFn;
-  audio: HyperScriptHelperFn;
-  b: HyperScriptHelperFn;
-  base: HyperScriptHelperFn;
-  bdi: HyperScriptHelperFn;
-  bdo: HyperScriptHelperFn;
-  blockquote: HyperScriptHelperFn;
-  body: HyperScriptHelperFn;
-  br: HyperScriptHelperFn;
-  button: HyperScriptHelperFn;
-  canvas: HyperScriptHelperFn;
-  caption: HyperScriptHelperFn;
-  cite: HyperScriptHelperFn;
-  code: HyperScriptHelperFn;
-  col: HyperScriptHelperFn;
-  colgroup: HyperScriptHelperFn;
-  dd: HyperScriptHelperFn;
-  del: HyperScriptHelperFn;
-  details: HyperScriptHelperFn;
-  dfn: HyperScriptHelperFn;
-  dir: HyperScriptHelperFn;
-  div: HyperScriptHelperFn;
-  dl: HyperScriptHelperFn;
-  dt: HyperScriptHelperFn;
-  em: HyperScriptHelperFn;
-  embed: HyperScriptHelperFn;
-  fieldset: HyperScriptHelperFn;
-  figcaption: HyperScriptHelperFn;
-  figure: HyperScriptHelperFn;
-  footer: HyperScriptHelperFn;
-  form: HyperScriptHelperFn;
-  h1: HyperScriptHelperFn;
-  h2: HyperScriptHelperFn;
-  h3: HyperScriptHelperFn;
-  h4: HyperScriptHelperFn;
-  h5: HyperScriptHelperFn;
-  h6: HyperScriptHelperFn;
-  head: HyperScriptHelperFn;
-  header: HyperScriptHelperFn;
-  hgroup: HyperScriptHelperFn;
-  hr: HyperScriptHelperFn;
-  html: HyperScriptHelperFn;
-  i: HyperScriptHelperFn;
-  iframe: HyperScriptHelperFn;
-  img: HyperScriptHelperFn;
-  input: HyperScriptHelperFn;
-  ins: HyperScriptHelperFn;
-  kbd: HyperScriptHelperFn;
-  keygen: HyperScriptHelperFn;
-  label: HyperScriptHelperFn;
-  legend: HyperScriptHelperFn;
-  li: HyperScriptHelperFn;
-  link: HyperScriptHelperFn;
-  main: HyperScriptHelperFn;
-  map: HyperScriptHelperFn;
-  mark: HyperScriptHelperFn;
-  menu: HyperScriptHelperFn;
-  meta: HyperScriptHelperFn;
-  nav: HyperScriptHelperFn;
-  noscript: HyperScriptHelperFn;
-  object: HyperScriptHelperFn;
-  ol: HyperScriptHelperFn;
-  optgroup: HyperScriptHelperFn;
-  option: HyperScriptHelperFn;
-  p: HyperScriptHelperFn;
-  param: HyperScriptHelperFn;
-  pre: HyperScriptHelperFn;
-  progress: HyperScriptHelperFn;
-  q: HyperScriptHelperFn;
-  rp: HyperScriptHelperFn;
-  rt: HyperScriptHelperFn;
-  ruby: HyperScriptHelperFn;
-  s: HyperScriptHelperFn;
-  samp: HyperScriptHelperFn;
-  script: HyperScriptHelperFn;
-  section: HyperScriptHelperFn;
-  select: HyperScriptHelperFn;
-  small: HyperScriptHelperFn;
-  source: HyperScriptHelperFn;
-  span: HyperScriptHelperFn;
-  strong: HyperScriptHelperFn;
-  style: HyperScriptHelperFn;
-  sub: HyperScriptHelperFn;
-  summary: HyperScriptHelperFn;
-  sup: HyperScriptHelperFn;
-  table: HyperScriptHelperFn;
-  tbody: HyperScriptHelperFn;
-  td: HyperScriptHelperFn;
-  textarea: HyperScriptHelperFn;
-  tfoot: HyperScriptHelperFn;
-  th: HyperScriptHelperFn;
-  thead: HyperScriptHelperFn;
-  time: HyperScriptHelperFn;
-  title: HyperScriptHelperFn;
-  tr: HyperScriptHelperFn;
-  u: HyperScriptHelperFn;
-  ul: HyperScriptHelperFn;
-  video: HyperScriptHelperFn;
+  svg: SVGHelperFn
+  a: HyperScriptHelperFn
+  abbr: HyperScriptHelperFn
+  address: HyperScriptHelperFn
+  area: HyperScriptHelperFn
+  article: HyperScriptHelperFn
+  aside: HyperScriptHelperFn
+  audio: HyperScriptHelperFn
+  b: HyperScriptHelperFn
+  base: HyperScriptHelperFn
+  bdi: HyperScriptHelperFn
+  bdo: HyperScriptHelperFn
+  blockquote: HyperScriptHelperFn
+  body: HyperScriptHelperFn
+  br: HyperScriptHelperFn
+  button: HyperScriptHelperFn
+  canvas: HyperScriptHelperFn
+  caption: HyperScriptHelperFn
+  cite: HyperScriptHelperFn
+  code: HyperScriptHelperFn
+  col: HyperScriptHelperFn
+  colgroup: HyperScriptHelperFn
+  dd: HyperScriptHelperFn
+  del: HyperScriptHelperFn
+  details: HyperScriptHelperFn
+  dfn: HyperScriptHelperFn
+  dir: HyperScriptHelperFn
+  div: HyperScriptHelperFn
+  dl: HyperScriptHelperFn
+  dt: HyperScriptHelperFn
+  em: HyperScriptHelperFn
+  embed: HyperScriptHelperFn
+  fieldset: HyperScriptHelperFn
+  figcaption: HyperScriptHelperFn
+  figure: HyperScriptHelperFn
+  footer: HyperScriptHelperFn
+  form: HyperScriptHelperFn
+  h1: HyperScriptHelperFn
+  h2: HyperScriptHelperFn
+  h3: HyperScriptHelperFn
+  h4: HyperScriptHelperFn
+  h5: HyperScriptHelperFn
+  h6: HyperScriptHelperFn
+  head: HyperScriptHelperFn
+  header: HyperScriptHelperFn
+  hgroup: HyperScriptHelperFn
+  hr: HyperScriptHelperFn
+  html: HyperScriptHelperFn
+  i: HyperScriptHelperFn
+  iframe: HyperScriptHelperFn
+  img: HyperScriptHelperFn
+  input: HyperScriptHelperFn
+  ins: HyperScriptHelperFn
+  kbd: HyperScriptHelperFn
+  keygen: HyperScriptHelperFn
+  label: HyperScriptHelperFn
+  legend: HyperScriptHelperFn
+  li: HyperScriptHelperFn
+  link: HyperScriptHelperFn
+  main: HyperScriptHelperFn
+  map: HyperScriptHelperFn
+  mark: HyperScriptHelperFn
+  menu: HyperScriptHelperFn
+  meta: HyperScriptHelperFn
+  nav: HyperScriptHelperFn
+  noscript: HyperScriptHelperFn
+  object: HyperScriptHelperFn
+  ol: HyperScriptHelperFn
+  optgroup: HyperScriptHelperFn
+  option: HyperScriptHelperFn
+  p: HyperScriptHelperFn
+  param: HyperScriptHelperFn
+  pre: HyperScriptHelperFn
+  progress: HyperScriptHelperFn
+  q: HyperScriptHelperFn
+  root: HyperScriptHelperFn
+  rp: HyperScriptHelperFn
+  rt: HyperScriptHelperFn
+  ruby: HyperScriptHelperFn
+  s: HyperScriptHelperFn
+  samp: HyperScriptHelperFn
+  script: HyperScriptHelperFn
+  section: HyperScriptHelperFn
+  select: HyperScriptHelperFn
+  small: HyperScriptHelperFn
+  source: HyperScriptHelperFn
+  span: HyperScriptHelperFn
+  strong: HyperScriptHelperFn
+  style: HyperScriptHelperFn
+  sub: HyperScriptHelperFn
+  summary: HyperScriptHelperFn
+  sup: HyperScriptHelperFn
+  table: HyperScriptHelperFn
+  tbody: HyperScriptHelperFn
+  td: HyperScriptHelperFn
+  textarea: HyperScriptHelperFn
+  tfoot: HyperScriptHelperFn
+  th: HyperScriptHelperFn
+  thead: HyperScriptHelperFn
+  time: HyperScriptHelperFn
+  title: HyperScriptHelperFn
+  tr: HyperScriptHelperFn
+  u: HyperScriptHelperFn
+  ul: HyperScriptHelperFn
+  video: HyperScriptHelperFn
 }
